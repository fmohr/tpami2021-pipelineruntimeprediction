plugins {
	id 'java'
	id 'eclipse-wtp'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
        	srcDir 'resources'
        	srcDir 'conf'
    	}
    }
    test {
	   	java {
   			srcDir 'src/test/java'
	   	}
    }
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	// dependencies for development time
	compile group: 'ai.libs', name: 'mlplan-weka', version: '0.2.1'
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
	maven {
        url "http://clojars.org/repo/"
    }
}

task evaluationFatJar(type: Jar) {
    manifest {
		attributes 'Main-Class': 'ecml.Experimenter'
    }
    zip64 = true
    baseName = 'ecml2018-experimenter'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}

task baseLearnerMeasurementsJar(type: Jar) {
    manifest {
		attributes 'Main-Class': 'ecml.basealgorithmlearning.BaseLearnerExperimenter'
    }
    zip64 = true
    baseName = 'baselearnerexecutor'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}

task regressionBuilderJar(type: Jar) {
    manifest {
		attributes 'Main-Class': 'ecml.basealgorithmlearning.LogDatasetToRegressionDatasetConverter'
    }
    zip64 = true
    baseName = 'regressionbuilder'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}

test {
	minHeapSize = "30M"
	maxHeapSize = "3g"
    ignoreFailures = true
   	
	testLogging {
		events "failed"
		exceptionFormat "full"
     } 	
}